# Nginx Configuration for E-Commerce Project
# Place this file in /etc/nginx/sites-available/ and create symlink to sites-enabled

server {
    listen 80;
    server_name localhost yourdomain.com www.yourdomain.com;
    root /var/www/html/E-Commerce;
    index index.php index.html;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';" always;

    # Disable server tokens
    server_tokens off;

    # Main location block - route everything to index.php
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP processing
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock; # Adjust PHP version as needed
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Security
        fastcgi_hide_header X-Powered-By;
        
        # Timeout settings
        fastcgi_read_timeout 300;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
    }

    # Static assets with caching
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1M;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Allow uploaded images
    location /uploaded_img/ {
        expires 1M;
        add_header Cache-Control "public";
        access_log off;
    }

    # Allow project images
    location "/project images/" {
        expires 1M;
        add_header Cache-Control "public";
        access_log off;
    }

    # Deny access to sensitive files and directories
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location /config/ {
        deny all;
    }

    location /core/ {
        deny all;
    }

    location /app/ {
        deny all;
    }

    location /components/ {
        deny all;
    }

    location /admin/ {
        # Optional: Add IP restriction for admin panel
        # allow 192.168.1.0/24;
        # deny all;
        
        try_files $uri $uri/ /admin/index.php?$query_string;
    }

    # Deny access to specific file types
    location ~* \.(sql|md|log|txt)$ {
        deny all;
    }

    # Deny access to backup files
    location ~* \.(bak|backup|old|orig|save|swp|tmp)$ {
        deny all;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    # Logging
    access_log /var/log/nginx/ecommerce_access.log;
    error_log /var/log/nginx/ecommerce_error.log;

    # GZIP compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Client settings
    client_max_body_size 10M;
    client_body_timeout 60;
    client_header_timeout 60;
    keepalive_timeout 65;
    send_timeout 60;
}

# HTTPS configuration (uncomment and configure for production)
# server {
#     listen 443 ssl http2;
#     server_name yourdomain.com www.yourdomain.com;
#     root /var/www/html/E-Commerce;
#     index index.php index.html;
#
#     # SSL Configuration
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#
#     # Include all location blocks from above
#     include /etc/nginx/conf.d/ecommerce-common.conf;
# }

# Redirect HTTP to HTTPS (uncomment for production)
# server {
#     listen 80;
#     server_name yourdomain.com www.yourdomain.com;
#     return 301 https://$server_name$request_uri;
# }
